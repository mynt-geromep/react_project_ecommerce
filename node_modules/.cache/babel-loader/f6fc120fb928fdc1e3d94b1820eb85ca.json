{"ast":null,"code":"import _slicedToArray from\"C:/Users/Gerome/Desktop/react_practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useEffect,useState}from\"react\";import{CartContext}from\"./CartContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cart=function Cart(){var _useContext=useContext(CartContext),cartItems=_useContext.cartItems,setCartItems=_useContext.setCartItems,value=_useContext.value,setValue=_useContext.setValue,cartItemsPrice=_useContext.cartItemsPrice,setCartItemsPrice=_useContext.setCartItemsPrice;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),totalPayment=_useState2[0],setTotalPayment=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),totalPaymentPrice=_useState4[0],setTotalPaymentPrice=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),checkoutSuccess=_useState6[0],setCheckoutSuccess=_useState6[1];var clearItems=function clearItems(){setTotalPayment(false);setTotalPaymentPrice(\"0.00\");setCartItems([]);setValue(0);};var checkoutMessage=function checkoutMessage(){if(value===0){alert(\"Add an item first. Before checking out.\");}else{setCheckoutSuccess(\"Successful checkout!\");}};useEffect(function(){if(totalPayment){var total=cartItemsPrice.reduce(function(accumulator,currentValue){return accumulator+currentValue.price;},0);var totalPrice=total.toFixed(2);setTotalPaymentPrice(totalPrice);}else{setCartItemsPrice([]);}return/*#__PURE__*/_jsx(\"div\",{children:totalPaymentPrice});},[totalPaymentPrice]);return/*#__PURE__*/_jsxs(\"div\",{className:\"cart-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Cart Items\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-column-1\",children:cartItems.map(function(item){return/*#__PURE__*/_jsx(\"div\",{className:\"cart-preview\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"cart-image\",children:[/*#__PURE__*/_jsx(\"img\",{src:item.image,alt:item.id}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart-details\",children:[/*#__PURE__*/_jsx(\"h3\",{children:item.title}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Price: $\",item.price]})]})]})},item.id);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart-column-2\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Total Items\"}),/*#__PURE__*/_jsx(\"h3\",{children:value}),/*#__PURE__*/_jsx(\"p\",{children:\"Total Payment\"}),/*#__PURE__*/_jsx(\"h3\",{children:totalPaymentPrice}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"cart-btn-checkout\",onClick:function onClick(){clearItems();checkoutMessage();},children:\"Checkout\"}),/*#__PURE__*/_jsx(\"button\",{className:\"cart-btn-clear\",onClick:clearItems,children:\"Clear\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-checkout-message\",children:checkoutSuccess})]})]});};export default Cart;","map":{"version":3,"sources":["C:/Users/Gerome/Desktop/react_practice/src/components/products/Cart.js"],"names":["useContext","useEffect","useState","CartContext","Cart","cartItems","setCartItems","value","setValue","cartItemsPrice","setCartItemsPrice","totalPayment","setTotalPayment","totalPaymentPrice","setTotalPaymentPrice","checkoutSuccess","setCheckoutSuccess","clearItems","checkoutMessage","alert","total","reduce","accumulator","currentValue","price","totalPrice","toFixed","map","item","image","id","title"],"mappings":"6JAAA,OAASA,UAAT,CAAqBC,SAArB,CAAgCC,QAAhC,KAAgD,OAAhD,CACA,OAASC,WAAT,KAA4B,eAA5B,C,wFAGA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CAEf,gBAAsFJ,UAAU,CAACG,WAAD,CAAhG,CAAOE,SAAP,aAAOA,SAAP,CAAkBC,YAAlB,aAAkBA,YAAlB,CAAgCC,KAAhC,aAAgCA,KAAhC,CAAuCC,QAAvC,aAAuCA,QAAvC,CAAiDC,cAAjD,aAAiDA,cAAjD,CAAiEC,iBAAjE,aAAiEA,iBAAjE,CACA,cAAwCR,QAAQ,CAAC,IAAD,CAAhD,wCAAOS,YAAP,eAAqBC,eAArB,eACA,eAAkDV,QAAQ,CAAC,CAAD,CAA1D,yCAAOW,iBAAP,eAA0BC,oBAA1B,eACA,eAA8CZ,QAAQ,CAAC,IAAD,CAAtD,yCAAOa,eAAP,eAAwBC,kBAAxB,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBL,eAAe,CAAC,KAAD,CAAf,CACAE,oBAAoB,CAAC,MAAD,CAApB,CACAR,YAAY,CAAC,EAAD,CAAZ,CACAE,QAAQ,CAAC,CAAD,CAAR,CACH,CALD,CAOA,GAAMU,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1B,GAAIX,KAAK,GAAK,CAAd,CAAiB,CACbY,KAAK,CAAC,yCAAD,CAAL,CACH,CAFD,IAEO,CACHH,kBAAkB,CAAC,sBAAD,CAAlB,CACH,CACJ,CAND,CAQAf,SAAS,CAAE,UAAM,CACb,GAAIU,YAAJ,CAAkB,CACd,GAAMS,CAAAA,KAAK,CAAGX,cAAc,CAACY,MAAf,CAAsB,SAACC,WAAD,CAAcC,YAAd,QAA+BD,CAAAA,WAAW,CAAGC,YAAY,CAACC,KAA1D,EAAtB,CAAuF,CAAvF,CAAd,CACA,GAAMC,CAAAA,UAAU,CAAGL,KAAK,CAACM,OAAN,CAAc,CAAd,CAAnB,CACAZ,oBAAoB,CAACW,UAAD,CAApB,CACH,CAJD,IAIO,CACHf,iBAAiB,CAAC,EAAD,CAAjB,CACH,CACD,mBACI,qBAAMG,iBAAN,EADJ,CAGH,CAXQ,CAWN,CAACA,iBAAD,CAXM,CAAT,CAcA,mBACI,aAAK,SAAS,CAAC,WAAf,wBACI,kCADJ,cAEI,YAAK,SAAS,CAAC,eAAf,UACKR,SAAS,CAACsB,GAAV,CAAe,SAACC,IAAD,qBACZ,YAAK,SAAS,CAAC,cAAf,uBACI,aAAK,SAAS,CAAC,YAAf,wBACI,YAAK,GAAG,CAAEA,IAAI,CAACC,KAAf,CAAsB,GAAG,CAAED,IAAI,CAACE,EAAhC,EADJ,cAEI,aAAK,SAAS,CAAC,cAAf,wBACI,oBAAKF,IAAI,CAACG,KAAV,EADJ,cAEI,gCAAYH,IAAI,CAACJ,KAAjB,GAFJ,GAFJ,GADJ,EAAmCI,IAAI,CAACE,EAAxC,CADY,EAAf,CADL,EAFJ,cAgBI,aAAK,SAAS,CAAC,eAAf,wBACI,kCADJ,cAEI,oBAAKvB,KAAL,EAFJ,cAGI,oCAHJ,cAII,oBAAKM,iBAAL,EAJJ,cAIgC,aAJhC,cAKI,eAAQ,SAAS,CAAC,mBAAlB,CAAsC,OAAO,CAAE,kBAAM,CACjDI,UAAU,GACVC,eAAe,GAClB,CAHD,sBALJ,cASI,eAAQ,SAAS,CAAC,gBAAlB,CAAmC,OAAO,CAAED,UAA5C,mBATJ,cAUI,YAAK,SAAS,CAAC,uBAAf,UACKF,eADL,EAVJ,GAhBJ,GADJ,CAiCH,CArED,CAuEA,cAAeX,CAAAA,IAAf","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { CartContext } from \"./CartContext\";\r\n\r\n\r\nconst Cart = () => {\r\n\r\n    const {cartItems, setCartItems, value, setValue, cartItemsPrice, setCartItemsPrice} = useContext(CartContext);\r\n    const [totalPayment, setTotalPayment] = useState(true)\r\n    const [totalPaymentPrice, setTotalPaymentPrice] = useState(0)\r\n    const [checkoutSuccess, setCheckoutSuccess] = useState(null)\r\n\r\n    const clearItems = () => {\r\n        setTotalPayment(false)\r\n        setTotalPaymentPrice(\"0.00\")\r\n        setCartItems([])\r\n        setValue(0)\r\n    }\r\n\r\n    const checkoutMessage = () => {\r\n        if (value === 0) {\r\n            alert(\"Add an item first. Before checking out.\");\r\n        } else {\r\n            setCheckoutSuccess(\"Successful checkout!\")\r\n        }\r\n    }\r\n \r\n    useEffect( () => {\r\n        if (totalPayment) {\r\n            const total = cartItemsPrice.reduce((accumulator, currentValue) => accumulator + currentValue.price, 0)\r\n            const totalPrice = total.toFixed(2)\r\n            setTotalPaymentPrice(totalPrice)      \r\n        } else {\r\n            setCartItemsPrice([])\r\n        }\r\n        return (\r\n            <div>{totalPaymentPrice}</div>\r\n        ) \r\n    }, [totalPaymentPrice])\r\n\r\n\r\n    return (\r\n        <div className=\"cart-list\">\r\n            <h2>Cart Items</h2>\r\n            <div className=\"cart-column-1\">\r\n                {cartItems.map( (item) => (\r\n                    <div className=\"cart-preview\" key={item.id}>\r\n                        <div className=\"cart-image\">\r\n                            <img src={item.image} alt={item.id} />\r\n                            <div className=\"cart-details\">\r\n                                <h3>{item.title}</h3>\r\n                                <p>Price: ${item.price}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"cart-column-2\">\r\n                <p>Total Items</p>\r\n                <h3>{value}</h3>\r\n                <p>Total Payment</p>\r\n                <h3>{totalPaymentPrice}</h3><hr />\r\n                <button className=\"cart-btn-checkout\" onClick={() => {\r\n                    clearItems()\r\n                    checkoutMessage()\r\n                }}>Checkout</button>\r\n                <button className=\"cart-btn-clear\" onClick={clearItems}>Clear</button>\r\n                <div className=\"cart-checkout-message\">\r\n                    {checkoutSuccess}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}