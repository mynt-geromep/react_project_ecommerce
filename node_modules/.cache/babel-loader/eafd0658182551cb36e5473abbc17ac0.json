{"ast":null,"code":"import _slicedToArray from\"C:/Users/Gerome/Desktop/react_practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";var useFetch=function useFetch(url){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),product=_useState2[0],setProduct=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){var abortCont=new AbortController();//useEffect cleanup\nfetch(url,{signal:abortCont.signal}).then(function(res){if(!res.ok){throw Error(\"Could not Fetch the Data for that Resource\");}return res.json();}).then(function(data){setProduct(data);setLoading(false);}).catch(function(err){if(err.name===\"AbortError\"){console.log('Fetch Aborted');}else{// Network / Server Error\nsetLoading(false);setError(err.message);}});return function(){return abortCont.abort();};},[url]);return{product:product,loading:loading,error:error};};export default useFetch;","map":{"version":3,"sources":["C:/Users/Gerome/Desktop/react_practice/src/components/products/useFetch.js"],"names":["useEffect","useState","useFetch","url","product","setProduct","loading","setLoading","error","setError","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","data","catch","err","name","console","log","message","abort"],"mappings":"6JAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAS,CACtB,cAA8BF,QAAQ,CAAC,IAAD,CAAtC,wCAAOG,OAAP,eAAgBC,UAAhB,eACA,eAA8BJ,QAAQ,CAAC,IAAD,CAAtC,yCAAOK,OAAP,eAAgBC,UAAhB,eACA,eAA0BN,QAAQ,CAAC,IAAD,CAAlC,yCAAOO,KAAP,eAAcC,QAAd,eAEAT,SAAS,CAAC,UAAM,CACZ,GAAMU,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,EAAlB,CAAyC;AAEzCC,KAAK,CAACT,GAAD,CAAM,CAACU,MAAM,CAAGH,SAAS,CAACG,MAApB,CAAN,CAAL,CACKC,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAG,CAACA,GAAG,CAACC,EAAR,CAAY,CACR,KAAMC,CAAAA,KAAK,CAAC,4CAAD,CAAX,CACH,CACD,MAAOF,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACH,CANL,EAOKJ,IAPL,CAOU,SAAAK,IAAI,CAAI,CACVd,UAAU,CAACc,IAAD,CAAV,CACAZ,UAAU,CAAC,KAAD,CAAV,CACH,CAVL,EAWKa,KAXL,CAWW,SAAAC,GAAG,CAAI,CACV,GAAIA,GAAG,CAACC,IAAJ,GAAa,YAAjB,CAA+B,CAC3BC,OAAO,CAACC,GAAR,CAAY,eAAZ,EACH,CAFD,IAEO,CAAE;AACLjB,UAAU,CAAC,KAAD,CAAV,CACAE,QAAQ,CAACY,GAAG,CAACI,OAAL,CAAR,CACH,CACJ,CAlBL,EAoBA,MAAO,kBAAMf,CAAAA,SAAS,CAACgB,KAAV,EAAN,EAAP,CACH,CAxBQ,CAwBN,CAACvB,GAAD,CAxBM,CAAT,CA0BA,MAAO,CAACC,OAAO,CAAPA,OAAD,CAAUE,OAAO,CAAPA,OAAV,CAAmBE,KAAK,CAALA,KAAnB,CAAP,CACH,CAhCD,CAkCA,cAAeN,CAAAA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nconst useFetch = (url) => {\r\n    const [product, setProduct] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        const abortCont = new AbortController(); //useEffect cleanup\r\n\r\n        fetch(url, {signal : abortCont.signal})\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"Could not Fetch the Data for that Resource\")\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                setProduct(data)\r\n                setLoading(false)\r\n            })\r\n            .catch(err => {\r\n                if (err.name === \"AbortError\") { \r\n                    console.log('Fetch Aborted')\r\n                } else { // Network / Server Error\r\n                    setLoading(false)\r\n                    setError(err.message)\r\n                }\r\n            })\r\n\r\n        return () => abortCont.abort();\r\n    }, [url])\r\n\r\n    return {product, loading, error}\r\n}\r\n \r\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}